name: Docker Build

on:
  release:
    types: [released]

jobs:
  meta:
    name: Fetch metadata
    runs-on: ubuntu-20.04

    outputs:
      link: ${{ steps.release.outputs.link }}
      version: ${{ steps.release.outputs.version }}
      valid: ${{ steps.check-tag.outputs.valid }}

    steps:
      - name: Find release
        id: release
        run: |
          JSON=$(curl -s https://api.cyware.khulnasoft.com/releases/latest)
          LINK=$(jq -r '.links[] | select(.platform == "linux-x86_64" and .kind == "cli") | .link' <<< $JSON)
          echo "link=$LINK" >> $GITHUB_OUTPUT
          VERSION=$(jq -r '.version' <<< $JSON)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check Tag
        id: check-tag
        run: |
          if [[ v${{ steps.release.outputs.version }} == ${{ github.ref_name }} ]]; then
              echo "valid=true" >> $GITHUB_OUTPUT
          fi

  build:
    if: needs.meta.outputs.valid == 'true'
    name: Build image
    runs-on: ubuntu-20.04
    needs: meta

    steps:
      - name: Checkout repositoy
        uses: actions/checkout@v3

      - name: Fetch runtime
        working-directory: ./distribution
        run: |
          curl -L ${{ needs.meta.outputs.link }} --output cyware.tar.gz
          tar -xf cyware.tar.gz

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: khulnasoft
          password: ${{ secrets.CD_DOCKERHUB }}

      - name: Build and push image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./distribution
          push: true
          tags: |
            khulnasoft/cyware:latest
            khulnasoft/cyware:${{ needs.meta.outputs.version }}
